[build-system]
requires = ["setuptools >= 80.4.0"]
build-backend = "setuptools.build_meta"

[project]
name = "maths"
version = "0.1"
requires-python = ">=3.13.3"
dependencies = [
  "deal==4.24.5",
  "hypothesis==6.131.9",
  "mypy==1.15.0",
  "pytest==8.3.5",
  "pytest-xdist==3.6.1",
  "ruff==0.11.11",
  "black==25.1.0",
]
keywords = [
  "mathematics",
  "maths",
  "math",
  "design by contract",
  "property based testing",
  "mathematical programming",
  "calculus",
  "algebra",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  # "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Other Audience",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Framework :: Hypothesis",
  "Framework :: Pytest",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
authors = [
  {name = "Jacobus Burger", email = "therealjacoburger@gmail.com"},
]
maintainers = [
  {name = "Jacobus Burger", email = "therealjacoburger@gmail.com"},
]
description = "A library of formally verified mathematical functions"
readme = "README.md"
license = "MIT"
[project.urls]
Repository = "https://github.com/LordUbuntu/maths"

[tool.pytest.ini_options]
addopts = "-n auto"
pythonpath = ["maths"]

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.black]
line-length = 80
target-version = ["py313"]

[tool.ruff]
line-length = 80
[tool.ruff.lint]
exclude = [
  # avoid false positives on test files
  "tests/**",
]
extend-select = [
  # for more see: https://docs.astral.sh/ruff/rules/
  # more may be added if necessary
  "A",      # avoid shadowing builtins
  "ANN",    # ensure type annotations
  "ASYNC",  # if using async
  "C90",    # keep mccabe (cyclomatic) complexity low
  "D",      # pydocstyle
  "E",      # pycodestyle
  "ERA",    # remove lingering comments
  "F",      # pyflakes
  "FURB",   # refurbish
  "FBT",    # no boolean traps (impure)
  "I",      # isort
  "N",      # follow pep8 naming conventions
  "Q",      # quote styling
  "SIM",    # "Simple is better than complex."
  "UP",     # pyupgrade
  # "B",      # bugbear (very strict)
]
extend-ignore = []
[tool.ruff.lint.pydocstyle]
convention = "numpy"
